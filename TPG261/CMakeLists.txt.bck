#=============================================================================
#
# file :        CMakeLists.txt
#
# description : File to generate a TANGO device server using cmake.
#
# project :     TPG261
#
#=============================================================================
#                This file is generated by POGO
#        (Program Obviously used to Generate tango Object)
#=============================================================================
#
#

cmake_minimum_required (VERSION 2.8)
set(CMAKE_SKIP_RPATH true)

# Windows cmakelists

# MAKE_ENV is the path to find common environment to build project
#
set(MAKE_ENV /usr/local/share/pogo/preferences)
#
# Project definitions
#
project(TPG261)

#
# optional compiler flags
#
set(CXXFLAGS_USER -g)


#
# Get global information
#
include(CmakeTangoWin.cmake)

#
# Files for TPG261 TANGO class
#
set(TPG261 TPG261)
set(TPG261_INCLUDE ${CMAKE_SOURCE_DIR})
set(TPG261_SRC ${TPG261}.cpp ${TPG261}Class.cpp ${TPG261}StateMachine.cpp)


#
# User additional include, link folders/libraries and source files
#
set(USER_INCL_DIR )
set(USER_LIB_DIR )
set(USER_LIBS )
set(USER_SRC_FILES )

#
# Set global info and include directories
#
set(ALL_CLASS_INCLUDE  ${TPG261_INCLUDE}  ${USER_INCL_DIR})
set(SERVER_SRC ${TPG261_SRC}  ${USER_SRC_FILES} ClassFactory.cpp main.cpp)
include_directories(${ALL_CLASS_INCLUDE}  ${USER_INCL_DIR} ${TANGO_INCLUDES})
link_directories(${TANGO_LNK_DIR})

#
# Device Server generation
#
set(SERVER_NAME TPG261)
add_executable(TPG261 ${SERVER_SRC})
target_link_libraries(TPG261 PUBLIC ${TANGO_LIBS} ${WIN_LIBS} ${ZMQ_LIB})
# Cpack target
install(TARGETS TPG261
	RUNTIME DESTINATION bin
	LIBRARY DESTINATION bin
	ARCHIVE DESTINATION bin)
